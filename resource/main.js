function day1(){document.write("<!DOCTYPE html><html><head><link href=\"..\/..\/picture\/favoricon.ico\"rel=\"shortcut icon\"><title>Xihao of the page<\/title><style>#next{float:right}#text-body{text-align:center;color:black}.button{background-color:#4CAF50;border:none;color:white;padding:16px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;-webkit-transition-duration:0.4s;transition-duration:0.4s;cursor:pointer}.button1{background-color:white;color:black;border:2px solid#4CAF50}.button1:hover{background-color:#4CAF50;color:white}.button1{border-radius:4px}<\/style><script>function Download(){window.location.replace(\"https:\/\/nchc.dl.sourceforge.net\/project\/devcpp20\/Release\/Dev-Cpp-5.16e.exe\")}<\/script><\/head><body><link rel=\"stylesheet\"type=\"text\/css\"href=\"..\/..\/resource\/main.css\"title=\"style\"><div class=\"header\"><h2>Documentation<\/h2><\/div><div class=\"topnav\"><a href=\"..\/download\/\">下载<\/a><a href=\"https:\/\/blog.csdn.net\">博客<\/a><a href=\"..\/docs\/\">文档<\/a><a href=\"..\/special\/\">专题<\/a><a href=\"..\/music\/\">音乐<\/a><a href=\"..\/chromedino\/\">chrome恐龙<\/a><\/div><br><br><div id=\"next\"><a href=\"..\/0002\/\"><font color=\"#a1a1a1\">下一章><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/a><\/div><br><br><div id=\"text-body\"><h3><font color=\"black\">安装C++编译器<\/font><\/h3>目前最流行的C++编译器便是Dev C++<br>可以很轻松的完成编程<br><img src=\"https:\/\/devcpp.gitee.io\/devcpp-main516a.png\"alt=\"Dev C++\"width=\"610\"height=\"485\"\/><br><br><b>点击下方按钮即可下载Dev C++<\/b><br><br><button class=\"button button1\"onclick=\"Download()\">下载<\/button><\/div><div class='container'><\/div><div class=\"footer\"><a href=\"https:\/\/github.com\/SoftOSDev\"><img src=\"https:\/\/github.githubassets.com\/pinned-octocat.svg\"alt=\"Github\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/facebook.com\/SoftOSDev\"><img src=\"https:\/\/i1.wp.com\/christcentergj.com\/wp-content\/uploads\/2015\/04\/facebook-logo-png.png?ssl=1\"alt=\"Facebook\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/twitter.com\/hxh7197\"><img src=\"https:\/\/ts1.cn.mm.bing.net\/th\/id\/R-C.3f7189662f19f8318fc75252deee723a?rik=Qa956Np1tp8Zcg&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f06%2fTwitter-Logo.png&ehk=6ekNd2ZmhpvFDGRZF19QcumP9fb8pZRkwrbFbK%2bpULA%3d&risl=&pid=ImgRaw&r=0\"alt=\"Twitter\"width=\"50\"height=\"50\"\/><\/a><\/h3><a href=\"https:\/\/handing.eu.org\"><p><font color=\"blue\">Copyright &#169 2022-2023 Handing Co.,lnc<\/p><\/a><\/div><\/body><\/html>");}
function day2() {document.write("<!DOCTYPE html><html><head><link href=\"..\/..\/picture\/favoricon.ico\"rel=\"shortcut icon\"><title>Xihao of the page<\/title><style>#next{float:right}#before{float:left}#text-body{text-align:center;color:black}.button{background-color:#4CAF50;border:none;color:white;padding:16px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;-webkit-transition-duration:0.4s;transition-duration:0.4s;cursor:pointer}.button1{background-color:white;color:black;border:2px solid#4CAF50}.button1:hover{background-color:#4CAF50;color:white}.button1{border-radius:4px}<\/style><\/head><body><link rel=\"stylesheet\"type=\"text\/css\"href=\"..\/..\/resource\/main.css\"title=\"style\"><div class=\"header\"><h2>Documentation<\/h2><\/div><div class=\"topnav\"><a href=\"..\/download\/\">下载<\/a><a href=\"https:\/\/blog.csdn.net\">博客<\/a><a href=\"..\/docs\/\">文档<\/a><a href=\"..\/special\/\">专题<\/a><a href=\"..\/music\/\">音乐<\/a><a href=\"..\/chromedino\/\">chrome恐龙<\/a><\/div><br><br><div id=\"before\"><a href=\"..\/0001\/\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#a1a1a1\"><上一章<\/font><\/a><\/div><div id=\"next\"><a href=\"..\/0003\/\"><font color=\"#a1a1a1\">下一章><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/a><\/div><br><br><div id=\"text-body\"><h3><font color=\"black\">C++基本语法<\/font><\/h3>C++程序可以定义为对象的集合，这些对象通过调用彼此的方法进行交互。现在让我们简要地看一下什么是类、对象，方法、即时变量。<br><b>对象<\/b>-对象具有状态和行为。例如：一只狗的状态-颜色、名称、品种，行为-摇动、叫唤、吃。对象是类的实例。<br><b>类<\/b>-类可以定义为描述对象行为\/状态的模板\/蓝图。<br><b>方法<\/b>-从基本上说，一个方法表示一种行为。一个类可以包含多个方法。可以在方法中写入逻辑、操作数据以及执行所有的动作。<br><b>即时变量<\/b>-每个对象都有其独特的即时变量。对象的状态是由这些即时变量的值创建的。<br><br><h3><font color=\"black\">C++程序结构<\/font><\/h3>让我们看一段简单的代码，可以输出单词Hello World。<br><br><img src=\"..\/..\/picture\/helloworld.png\"alt=\"Hello World\"\/><br><br>接下来我们讲解一下上面这段程序：<br>C++语言定义了一些头文件，这些头文件包含了程序中必需的或有用的信息。上面这段程序中，包含了头文件<b>&ltiostream&gt<\/b>。<br>下一行<b>using namespace std;<\/b>告诉编译器使用std命名空间。命名空间是C++中一个相对新的概念。<br>下一行 <b>\/\/ main() 是程序开始执行的地方<\/b> 是一个单行注释。单行注释以 \/\/ 开头，在行末结束。<br>下一行<b>int main()<\/b>是主函数，程序从这里开始执行。<br>下一行<b>cout<<\"Hello World\";<\/b>会在屏幕上显示消息\"Hello World\"。<br>下一行<b>return 0;<\/b>终止main()函数，并向调用进程返回值0。<br><br><h3><font color=\"black\">C++中的分号&语句块<\/font><\/h3><br>在C++中，分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。<br>例如，下面是三个不同的语句：<br><br><img src=\"..\/..\/picture\/yj.png\"\/><br><br>语句块是一组使用大括号括起来的按逻辑连接的语句。例如：<br><br><img src=\"..\/..\/picture\/yj2.png\"\/><br><br>C++不以行末作为结束符的标识，因此，您可以在一行上放置多个语句。例如：<br><br><img src=\"..\/..\/picture\/yj3.jpg\"\/><br><br>等于<br><br><img src=\"..\/..\/picture\/yj4.jpg\"\/><br><br><br><h3><font color=\"black\">C++标识符<\/font><\/h3>C++标识符是用来标识变量、函数、类、模块，或任何其他用户自定义项目的名称。一个标识符以字母A-Z或a-z或下划线_开始，后跟零个或多个字母、下划线和数字（0-9）。<br>C++标识符内不允许出现标点字符，比如@、&和%。C++是区分大小写的编程语言。因此，在C++中，<b>Manpower<\/b>和<b>manpower<\/b>是两个不同的标识符。<br>下面列出几个有效的标识符：<br><br><img src=\"..\/..\/picture\/bsf.jpg\"\/><br><br><br><h3><font color=\"black\">C++关键字<\/font><\/h3><br>下表列出了C++中的保留字。这些保留字不能作为常量名、变量名或其他标识符名称。<br><br><img src=\"..\/..\/picture\/keywords.jpg\"\/><h3><font color=\"black\">C++中的空格<\/font><\/h3>只包含空格的行，被称为空白行，可能带有注释，C++编译器会完全忽略它。<br>在C++中，空格用于描述空白符、制表符、换行符和注释。空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如int）在哪里结束，下一个元素在哪里开始。因此，在下面的语句中：<br><br><img src=\"..\/..\/picture\/yj5.jpg\"\/><br>在这里，int和age之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：<br><br><img src=\"..\/..\/picture\/yj6.jpg\"\/><br>fruit和=，或者=和apples之间的空格字符不是必需的，但是为了增强可读性，您可以根据需要适当增加一些空格。<\/div><div class='container'><\/div><div class=\"footer\"><a href=\"https:\/\/github.com\/SoftOSDev\"><img src=\"https:\/\/github.githubassets.com\/pinned-octocat.svg\"alt=\"Github\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/facebook.com\/SoftOSDev\"><img src=\"https:\/\/i1.wp.com\/christcentergj.com\/wp-content\/uploads\/2015\/04\/facebook-logo-png.png?ssl=1\"alt=\"Facebook\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/twitter.com\/hxh7197\"><img src=\"https:\/\/ts1.cn.mm.bing.net\/th\/id\/R-C.3f7189662f19f8318fc75252deee723a?rik=Qa956Np1tp8Zcg&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f06%2fTwitter-Logo.png&ehk=6ekNd2ZmhpvFDGRZF19QcumP9fb8pZRkwrbFbK%2bpULA%3d&risl=&pid=ImgRaw&r=0\"alt=\"Twitter\"width=\"50\"height=\"50\"\/><\/a><\/h3><a href=\"https:\/\/handing.eu.org\"><p><font color=\"blue\">Copyright &#169 2022-2023 Handing Co.,lnc<\/p><\/a><\/div><\/body><\/html>");}
function day3(){document.write("<!DOCTYPE html><html><head><link href=\"..\/..\/picture\/favoricon.ico\"rel=\"shortcut icon\"><title>Xihao of the page<\/title><style>#next{float:right}#before{float:left}#text-body{text-align:center;color:black}.button{background-color:#4CAF50;border:none;color:white;padding:16px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;-webkit-transition-duration:0.4s;transition-duration:0.4s;cursor:pointer}.button1{background-color:white;color:black;border:2px solid#4CAF50}.button1:hover{background-color:#4CAF50;color:white}.button1{border-radius:4px}<\/style><\/head><body><link rel=\"stylesheet\"type=\"text\/css\"href=\"..\/..\/resource\/main.css\"title=\"style\"><div class=\"header\"><h2>Documentation<\/h2><\/div><div class=\"topnav\"><a href=\"..\/download\/\">下载<\/a><a href=\"https:\/\/blog.csdn.net\">博客<\/a><a href=\"..\/docs\/\">文档<\/a><a href=\"..\/special\/\">专题<\/a><a href=\"..\/music\/\">音乐<\/a><a href=\"..\/chromedino\/\">chrome恐龙<\/a><\/div><br><br><div id=\"before\"><a href=\"..\/0002\/\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#a1a1a1\"><上一章<\/font><\/a><\/div><div id=\"next\"><a href=\"..\/0004\/\"><font color=\"#a1a1a1\">下一章><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/a><\/div><br><br><div id=\"text-body\"><h3><font color=\"black\">C++注释<\/font><\/h3>程序的注释是解释性语句，您可以在C++代码中包含注释，这将提高源代码的可读性。所有的编程语言都允许某种形式的注释。<br>C++支持单行注释和多行注释。注释中的所有字符会被C++编译器忽略。<br>C++注释一般有两种：<br><b>\/\/<\/b>-一般用于单行注释。<\/b><br><b>\/* ... *\/<\/b>-一般用于多行注释。<br><br>注释以<b>\/\/<\/b> 开始，直到行末为止。例如：<br><br><img src=\"..\/..\/picture\/exegesis.jpg\"\/><br>也可以放在语句后面：<br><br><img src=\"..\/..\/picture\/exegesis2.jpg\"\/><br>当上面的代码被编译时，编译器会忽略<b>\/\/ 这是一个注释<\/b> 和 <b>\/\/ 输出 Hello World!<\/b>，最后会产生以下结果：<br><br><img src=\"..\/..\/picture\/notes-output.jpg\"\/><br>C++注释以<b><\/b>终止。例如：<br><br><img src=\"..\/..\/picture\/exegesis3.jpg\"\/><br>在<b>\/*<\/b> 和 <b>*\/<\/b>注释内部，<b>\/\/<\/b> 字符没有特殊的含义。<b>\/\/<\/b> 注释内，<b>\/*<\/b> 和 <b>*\/<\/b> 字符也没有特殊的含义。因此，您可以在一种注释内嵌套另一种注释。例如：<br><br><img src=\"..\/..\/picture\/exegesis4.jpg\"\/><\/div><div class='container'><\/div><div class=\"footer\"><a href=\"https:\/\/github.com\/SoftOSDev\"><img src=\"https:\/\/github.githubassets.com\/pinned-octocat.svg\"alt=\"Github\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/facebook.com\/SoftOSDev\"><img src=\"https:\/\/i1.wp.com\/christcentergj.com\/wp-content\/uploads\/2015\/04\/facebook-logo-png.png?ssl=1\"alt=\"Facebook\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/twitter.com\/hxh7197\"><img src=\"https:\/\/ts1.cn.mm.bing.net\/th\/id\/R-C.3f7189662f19f8318fc75252deee723a?rik=Qa956Np1tp8Zcg&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f06%2fTwitter-Logo.png&ehk=6ekNd2ZmhpvFDGRZF19QcumP9fb8pZRkwrbFbK%2bpULA%3d&risl=&pid=ImgRaw&r=0\"alt=\"Twitter\"width=\"50\"height=\"50\"\/><\/a><\/h3><a href=\"https:\/\/handing.eu.org\"><p><font color=\"blue\">Copyright &#169 2022-2023 Handing Co.,lnc<\/p><\/a><\/div><\/body><\/html>");}
function day4(){document.write("<!DOCTYPE html><html><head><link href=\"..\/..\/picture\/favoricon.ico\"rel=\"shortcut icon\"><title>Xihao of the page<\/title><style>#next{float:right}#before{float:left}#text-body{text-align:center;color:black}.button{background-color:#4CAF50;border:none;color:white;padding:16px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;-webkit-transition-duration:0.4s;transition-duration:0.4s;cursor:pointer}.button1{background-color:white;color:black;border:2px solid#4CAF50}.button1:hover{background-color:#4CAF50;color:white}.button1{border-radius:4px}<\/style><\/head><body><link rel=\"stylesheet\"type=\"text\/css\"href=\"..\/..\/resource\/main.css\"title=\"style\"><div class=\"header\"><h2>Documentation<\/h2><\/div><div class=\"topnav\"><a href=\"..\/download\/\">下载<\/a><a href=\"https:\/\/blog.csdn.net\">博客<\/a><a href=\"..\/docs\/\">文档<\/a><a href=\"..\/special\/\">专题<\/a><a href=\"..\/music\/\">音乐<\/a><a href=\"..\/chromedino\/\">chrome恐龙<\/a><\/div><br><br><div id=\"before\"><a href=\"..\/0003\/\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#a1a1a1\"><上一章<\/font><\/a><\/div><div id=\"next\"><a href=\"..\/0005\/\"><font color=\"#a1a1a1\">下一章><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/a><\/div><br><br><div id=\"text-body\"><h3><font color=\"black\">C++数据类型<\/font><\/h3>使用编程语言进行编程时，需要用到各种变量来存储各种信息。变量保留的是它所存储的值的内存位置。这意味着，当您创建一个变量时，就会在内存中保留一些空间。<br>您可能需要存储各种数据类型（比如字符型、宽字符型、整型、浮点型、双浮点型、布尔型等）的信息，操作系统会根据变量的数据类型，来分配内存和决定在保留内存中存储什么。<br><br><h3><font color=\"black\">基本的内置类型<\/font><\/h3>C++为程序员提供了种类丰富的内置数据类型和用户自定义的数据类型。下表列出了七种基本的C++数据类型：<br><br><img src=\"..\/..\/picture\/table_key.jpg\"\/><br>其实wchar_t是这样来的：<br><br><img src=\"..\/..\/picture\/wchar_t.jpg\"\/><br>所以wchar_t实际上的空间是和short int一样。<br><br>下表显示了各种变量类型在内存中存储值时需要占用的内存，以及该类型的变量所能存储的最大值和最小值。<br><b>注意：<\/b>不同系统会有所差异，一字节为8位。<br><b>注意：<\/b>默认情况下，int、short、long都是带符号的，即signed。<br><b>注意：<\/b>long int 8个字节，int都是4个字节，早期的C编译器定义了long int占用4个字节，int占用2个字节，新版的C\/C++标准兼容了早期的这一设定。<br><br><img src=\"..\/..\/picture\/table_type_size.jpg\"\/><br><br><i>注意，各种类型的存储大小与系统位数有关，但目前通用的以64位系统为主。<br>以下列出了32位系统与64位系统的存储大小的差别（windows相同）：<\/i><br><br><img src=\"..\/..\/picture\/32_64_size.jpg\"width=\"500\"\/><br>从上表可得知，变量的大小会根据编译器和所使用的电脑而有所不同。<br>下面实例会输出您电脑上各种数据类型的大小。<br><br><img src=\"..\/..\/picture\/out_your_computer_type_size.jpg\"\/><br>本实例使用了<b>endl<\/b>，这将在每一行后插入一个换行符，<b><<<\/b>运算符用于向屏幕传多个值，<b>sizeof()<\/b>运算符用来获取各种数据类型的大小。<br>当上面的代码被编译和执行时，它会产生以下的结果，结果会根据所使用的计算机而有所不同：<br><br><img src=\"..\/..\/picture\/computer_type_size.jpg\"\/><br><br><h3><font color=\"black\">typedef声明<\/font><\/h3>您可以使用<b>typedef<\/b>为一个已有的类型取一个新的名字。下面是使用typedef定义一个新类型的语法：<br><br><img src=\"..\/..\/picture\/typedef1.jpg\"\/><br>例如，下面的语句会告诉编译器，feet是int的另一个名称：<br><br><img src=\"..\/..\/picture\/typedef2.jpg\"\/><br>现在，下面的声明是完全合法的，它创建了一个整型变量distance：<br><br><img src=\"..\/..\/picture\/typedef3.jpg\"\/><br><br><h3><font color=\"black\">枚举类型<\/font><\/h3>枚举类型(enumeration)是C++中的一种派生数据类型，它是由用户定义的若干枚举常量的集合。<br>如果一个变量只有几种可能的值，可以定义为枚举(enumeration)类型。所谓\"枚举\"是指将变量的值一一列举出来，变量的值只能在列举出来的值的范围内。<br>创建枚举，需要使用关键字<b>enum<\/b>。枚举类型的一般形式为：<br><br><img src=\"..\/..\/picture\/enum.jpg\"\/><br>如果枚举没有初始化,即省掉\"=整型常数\"时,则从第一个标识符开始。<br>例如，下面的代码定义了一个颜色枚举，变量c的类型为color。最后，c被赋值为\"blue\"。<br><br><img src=\"..\/..\/picture\/enum_demo1.jpg\"\/><br>默认情况下，第一个名称的值为0，第二个名称的值为1，第三个名称的值为2，以此类推。<br>但是，您也可以给名称赋予一个特殊的值，只需要添加一个初始值即可。例如，在下面的枚举中，green的值为5。<br><br><img src=\"..\/..\/picture\/enum_demo2.jpg\"\/><br>在这里，<b>blue<\/b>的值为6，因为默认情况下，每个名称都会比它前面一个名称大1，但red的值依然为0。<\/div><div class='container'><\/div><div class=\"footer\"><a href=\"https:\/\/github.com\/SoftOSDev\"><img src=\"https:\/\/github.githubassets.com\/pinned-octocat.svg\"alt=\"Github\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/facebook.com\/SoftOSDev\"><img src=\"https:\/\/i1.wp.com\/christcentergj.com\/wp-content\/uploads\/2015\/04\/facebook-logo-png.png?ssl=1\"alt=\"Facebook\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/twitter.com\/hxh7197\"><img src=\"https:\/\/ts1.cn.mm.bing.net\/th\/id\/R-C.3f7189662f19f8318fc75252deee723a?rik=Qa956Np1tp8Zcg&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f06%2fTwitter-Logo.png&ehk=6ekNd2ZmhpvFDGRZF19QcumP9fb8pZRkwrbFbK%2bpULA%3d&risl=&pid=ImgRaw&r=0\"alt=\"Twitter\"width=\"50\"height=\"50\"\/><\/a><\/h3><a href=\"https:\/\/handing.eu.org\"><p><font color=\"blue\">Copyright &#169 2022-2023 Handing Co.,lnc<\/p><\/a><\/div><\/body><\/html>");}
function day5(){document.write("<!DOCTYPE html><html><head><link href=\"..\/..\/picture\/favoricon.ico\"rel=\"shortcut icon\"><title>Xihao of the page<\/title><style>#next{float:right}#before{float:left}#text-body{text-align:center;color:black}.button{background-color:#4CAF50;border:none;color:white;padding:16px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;-webkit-transition-duration:0.4s;transition-duration:0.4s;cursor:pointer}.button1{background-color:white;color:black;border:2px solid#4CAF50}.button1:hover{background-color:#4CAF50;color:white}.button1{border-radius:4px}<\/style><\/head><body><link rel=\"stylesheet\"type=\"text\/css\"href=\"..\/..\/resource\/main.css\"title=\"style\"><div class=\"header\"><h2>Documentation<\/h2><\/div><div class=\"topnav\"><a href=\"..\/download\/\">下载<\/a><a href=\"https:\/\/blog.csdn.net\">博客<\/a><a href=\"..\/docs\/\">文档<\/a><a href=\"..\/special\/\">专题<\/a><a href=\"..\/music\/\">音乐<\/a><a href=\"..\/chromedino\/\">chrome恐龙<\/a><\/div><br><br><div id=\"before\"><a href=\"..\/0004\/\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#a1a1a1\"><上一章<\/font><\/a><\/div><div id=\"next\"><a href=\"..\/0006\/\"><font color=\"#a1a1a1\">下一章><\/font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/a><\/div><br><br><div id=\"text-body\"><h3><font color=\"black\">C++变量类型<\/font><\/h3>变量其实只不过是程序可操作的存储区的名称。C++中每个变量都有指定的类型，类型决定了变量存储的大小和布局，该范围内的值都可以存储在内存中，运算符可应用于变量上。<br>变量的名称可以由字母、数字和下划线字符组成。它必须以字母或下划线开头。大写字母和小写字母是不同的，因为C++是大小写敏感的。<br>基于前一章讲解的基本类型，有以下几种基本的变量类型，将在下一章中进行讲解：<br><br><img src=\"..\/..\/picture\/var_types_table.jpg\"\/><br>C++也允许定义各种其他类型的变量，比如<b>枚举、指针、数组、引用、数据结构、类<\/b>等等，这将会在后续的章节中进行讲解。<br>下面我们将讲解如何定义、声明和使用各种类型的变量。<br><br><h3><font color=\"black\">C++中的变量定义<\/font><\/h3>变量定义就是告诉编译器在何处创建变量的存储，以及如何创建变量的存储。<br><br><img src=\"..\/..\/picture\/var_saves.bmp\"width=\"600\"\/><br>变量定义指定一个数据类型，并包含了该类型的一个或多个变量的列表，如下所示：<br><br><img src=\"..\/..\/picture\/var_saves_type.jpg\"\/><br>在这里，<b>type<\/b>必须是一个有效的C++数据类型，可以是char、wchar_t、int、float、double、bool或任何用户自定义的对象，<b>variable_list<\/b>可以由一个或多个标识符名称组成，多个标识符之间用逗号分隔。下面列出几个有效的声明：<br><br><img src=\"..\/..\/picture\/variable_list.jpg\"\/><br>行<b>int i,j,k;<\/b>声明并定义了变量i、j和k，这指示编译器创建类型为int的名为i、j、k的变量。<br>变量可以在声明的时候被初始化（指定一个初始值）。初始化器由一个等号，后跟一个常量表达式组成，如下所示：<br><br><img src=\"..\/..\/picture\/saves_var_add_var.jpg\"\/><br>下面列举几个实例：<br><br><img src=\"..\/..\/picture\/var_types_demo0.jpg\"\/><br>不带初始化的定义：带有静态存储持续时间的变量会被隐式初始化为<b>NULL（所有字节的值都是0）<\/b>，其他所有变量的初始值是未定义的。<br><br><h3><font color=\"black\">C++中的变量声明<\/font><\/h3>变量声明向编译器保证变量以给定的类型和名称存在，这样编译器在不需要知道变量完整细节的情况下也能继续进一步的编译。<br>变量声明只在编译时有它的意义，在程序连接时编译器需要实际的变量声明。<br>当您使用多个文件且只在其中一个文件中定义变量时（定义变量的文件在程序连接时是可用的），变量声明就显得非常有用。<br>您可以使用<b>extern<\/b>关键字在任何地方声明一个变量。<br>虽然您可以在C++程序中多次声明一个变量，但变量只能在某个文件、函数或代码块中被定义一次。<br><br><h3><font color=\"black\">实例<\/font><\/h3>尝试下面的实例，其中，变量在头部就已经被声明，但它们是在主函数内被定义和初始化的：<br><br><img src=\"..\/..\/picture\/var_types_demo.jpg\"\/><br>当上面的代码被编译和执行时，它会产生下列结果：<br><br><img src=\"..\/..\/picture\/out_var_types_demo.jpg\"\/><br>同样的，在函数声明时，提供一个函数名，而函数的实际定义则可以在任何地方进行。例如：<br><br><img src=\"..\/..\/picture\/var_types_demo1.jpg\"\/><br><br><h3><font color=\"black\">C++中的左值（Lvalues）和右值（Rvalues）<\/font><\/h3>C++中有两种类型的表达式：<br><b>左值（lvalue）<\/b>：指向内存位置的表达式被称为左值（lvalue）表达式。左值可以出现在赋值号的左边或右边。<br><b>右值（rvalue）<\/b>：术语右值（rvalue）指的是存储在内存中某些地址的数值。右值是不能对其进行赋值的表达式，也就是说，右值可以出现在赋值号的右边，但不能出现在赋值号的左边。<br>变量是左值，因此可以出现在赋值号的左边。数值型的字面值是右值，因此不能被赋值，不能出现在赋值号的左边。下面是一个有效的语句：<br><br><img src=\"..\/..\/picture\/true_lvalues.jpg\"\/><br>但是下面这个就不是一个有效的语句，会生成编译时错误：<br><br><img src=\"..\/..\/picture\/false_lvalues.jpg\"\/><\/div><div class='container'><\/div><div class=\"footer\"><a href=\"https:\/\/github.com\/SoftOSDev\"><img src=\"https:\/\/github.githubassets.com\/pinned-octocat.svg\"alt=\"Github\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/facebook.com\/SoftOSDev\"><img src=\"https:\/\/i1.wp.com\/christcentergj.com\/wp-content\/uploads\/2015\/04\/facebook-logo-png.png?ssl=1\"alt=\"Facebook\"width=\"50\"height=\"50\"\/><\/a><a href=\"https:\/\/twitter.com\/hxh7197\"><img src=\"https:\/\/ts1.cn.mm.bing.net\/th\/id\/R-C.3f7189662f19f8318fc75252deee723a?rik=Qa956Np1tp8Zcg&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f06%2fTwitter-Logo.png&ehk=6ekNd2ZmhpvFDGRZF19QcumP9fb8pZRkwrbFbK%2bpULA%3d&risl=&pid=ImgRaw&r=0\"alt=\"Twitter\"width=\"50\"height=\"50\"\/><\/a><\/h3><a href=\"https:\/\/handing.eu.org\"><p><font color=\"blue\">Copyright &#169 2022-2023 Handing Co.,lnc<\/p><\/a><\/div><\/body><\/html>");}
